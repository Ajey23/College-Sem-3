NAME:SARODE AJAY
ROLL NO:B02
ENROLLMENT NO:202100319010098
ASSIGNMENT-2
DBMS-2


CREATE TABLE Customers(CustomerId INT, FirstName VARCHAR(50), LastName VARCHAR(50), City VARCHAR(50), State VARCHAR(50));

INSERT INTO Customers VALUE(10101, "John", "Gray", "Lynden", "Washington");
INSERT INTO Customers VALUE(10298, "Leroy", "Brown", "Pinetop", "Arizona");
INSERT INTO Customers VALUE(10299, "Elroy", "Keller", "Snoqulmie", "Washington");
INSERT INTO Customers VALUE(10315, "Lisa", "Jones", "Oshkosh", "Wisconsin");
INSERT INTO Customers VALUE(10325, "Ginger", "Schultz", "Pocatello", "Idaho");
INSERT INTO Customers VALUE(10329, "Kelly", "Mendoza", "Kailua", "Hawaii");
INSERT INTO Customers VALUE(10330, "Shawn", "Dalton", "Cannon Beach", "Oregon");
INSERT INTO Customers VALUE(10339, "Anthony", "Sanchez", "Winslow", "Arizon");

CREATE TABLE Items_Ordered(CustomerId INT, Order_Date DATE, Item VARCHAR(50), Quantity INT, Price NUMERIC(6,2));

INSERT INTO Items_Ordered VALUE(10330, '1998-06-30', "Pogo Stick", 1, 28.00); 
INSERT INTO Items_Ordered VALUE(10101, '1999-06-30', "Raft", 1, 58.00); 
INSERT INTO Items_Ordered VALUE(10298, '1996-07-01', "Skateboard", 1, 33.00); 
INSERT INTO Items_Ordered VALUE(10101, '1998-07-01', "Life Vest", 4, 125.00); 
INSERT INTO Items_Ordered VALUE(10299, '1999-07-06', "Parachute", 1, 1250.00); 
INSERT INTO Items_Ordered VALUE(10339, '1998-07-27', "Umbrella", 1, 4.50); 
INSERT INTO Items_Ordered VALUE(10449, '1995-08-13', "Unicycle", 1, 180.79); 
INSERT INTO Items_Ordered VALUE(10439, '1996-07-14', "Ski Poles", 2, 25.50); 
INSERT INTO Items_Ordered VALUE(10101, '1998-07-18', "Rain Coat", 1, 18.30); 


1. Write an sql query to perform natural join from customers table to items_ordered.
			SELECT *FROM Customers NATURAL JOIN Items_Ordered;

2. Set the primary key constraint on customerid column in customers table.
			SELECT *FROM Customers NATURAL JOIN Items_Ordered;
			
4. Write an sql query to perform cross join from Customers to items_ordered table.
			SELECT *FROM Customers CROSS JOIN Items_Ordered;

5. Write a query to perform left join from customers to items_ordered table.
			SELECT *FROM Customers LEFT OUTER JOIN Items_Ordered ON Customers.CustomerId=Items_Ordered.CustomerId;

6. Write a query to perform inner join from customers to items_ordered table.
			SELECT *FROM Customers INNER JOIN Items_Ordered ON Customers.CustomerId=Items_Ordered.CustomerId;
			
7. Write an sql query to perform Union function on customerid column of customers table and items_ordered table.
			SELECT CustomerId FROM Customers UNION SELECT CustomerId FROM Items_Ordered;

8. Write an sql query to perform UNIONALL function on customerid column of customers table and items_ordered table.
			SELECT CustomerId FROM Customers UNION ALL SELECT CustomerId FROM Items_Ordered;

9. List the item prices round to 1 decimal place.
			SELECT CustomerId FROM Customers UNION SELECT CustomerId FROM Items_Ordered;

10. List all the customers names in customers table in small letters(concatenated).
			SELECT FirstName, LOWER(FirstName) From Customers;

11. List the item prices round to 0 decimal place.
			SELECT Price, ROUND(Price,0) FROM Items_Ordered;

12. Write an sql query to perform INTERSECT alternative function on customerid column of customers table and items_ordered table.
			SELECT CustomerId FROM Customers INTERSECT SELECT CustomerId FROM Items_Ordered;

13. Write an sql query to use CEIL numeric function on the price column of the items_ordered
			SELECT CEIL(Price) FROM Items_Ordered;

14. Write an sql query to use FlOOR numeric function on the price column of the items_ordered
			SELECT FLOOR(Price) FROM Items_Ordered;

15. List all Customeers names in all capital letters (concatenated).
			SELECT FirstName, UPPER(FirstName) FROM Customers;

16. List all the customers names from customer table using concatenation function AS NAME.
			SELECT FirstName, UPPER(FirstName) FROM Customers;

17. List the first three characters for the city from Customers table.
			SELECT SUBSTR(City,1,3) FROM Customers;

18. List the first three characters of the item from items_ordered table.
			SELECT SUBSTR(LastName,1,3) FROM Items_Ordered;

19. List all the customers last names and length of their last names AS NAMESIZE.
			SELECT LENGTH(LastName) AS NAMESIZE FROM Customers;





